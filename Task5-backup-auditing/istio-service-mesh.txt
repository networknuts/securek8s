=== ISTIO

#1 - Download and extract latest release

curl -L https://istio.io/downloadIstio | sh -

#2 - Move inside istio directory. It contains sample applications in "samples/" and istioctl client in "bin/" directory

#3 - Add istioctl client to your path
export PATH=$PWD/bin:$PATH

#4 - Verify pre-requisites 
istioctl -x precheck

#5 - Installing istio on kubernetes

The official method for any real installation of Istio is to use istioctl, istio-operator, or Helm. We will use
istioctl to take a step-by-step, incremental approach to adopting Istio. Use the istioctl CLI:

# istioctl install --set profile=demo -y
# kubectl -n istio-system get pods
# istioctl verify-install

#6 - Install addons
kubectl apply -f ./samples/addons

//grafana - visualizes metrics generated by the proxies and collected by Prometheus
//jaeger - distributed tracing system to visualize request flow through the mesh
//kiali - web console for the mesh
//prometheus - collects and stores the generated metrics as time-series data

#7 - Deploy application with service mesh support. Using automatic injection on a namespace. We label the googleapp namespace with
istio-injection=enabled (recommended)

# kubectl create ns googleapp
# kubectl label namespace googleapp istio-injection=enabled


#8 - Now create  sample application

git clone https://github.com/GoogleCloudPlatform/microservices-demo
cd microservices-demo/

kubectl -n googleapp apply -f release/kubernetes-manifests.yaml
kubectl -n googleapp get all
kubectl -n googleapp get svc
kubectl -n googleapp expose deployment frontend --name frontend-svc-np --type NodePort
kubectl -n googleapp describe svc frontend-svc-np
<note down the nodeport>

Access your workstation browser and point to - http://manager-ip:nodeport

#9 - Access grafana dashboard

istioctl dashboard grafana

This should open your default browser; if it doesnâ€™t, open a browser and go to http://localhost:3000

#10 - Jaeger

istioctl dashboard jaeger



